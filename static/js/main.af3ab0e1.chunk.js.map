{"version":3,"sources":["components/characters/charactersSlice.js","components/locations/locationsSlice.js","components/episodes/episodesSlice.js","components/characters/Character.js","components/characters/Characters.js","components/locations/Location.js","components/locations/Locations.js","components/episodes/Episode.js","components/episodes/Episodes.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["charactersSlice","createSlice","name","initialState","charactersURL","paginationURL","arrayCharacters","arraySearchSpecies","arraySearchCharacterTypes","arraySearchGender","label","value","arraySearchCharacterStatus","reducers","loadArrayCharacters","reducer","state","action","i","payload","length","push","loadArraySearchSpecies","loadArraySearchCharacterTypes","actions","locationsSlice","locationsURL","arrayLocations","arraySearchLocationTypes","arraySearchDimensions","loadArrayLocations","loadArraySearchLocationTypes","loadArraySearchDimensions","console","log","episodesSlice","episodesURL","arrayEpisodes","loadArrayEpisodes","Character","props","results","useState","modal","setModal","loadDetailsModal","Fragment","map","character","Card","className","src","image","alt","CardBody","CardLink","href","url","onClick","gender","event","preventDefault","setDdSearchGender","species","setDdSearchSpecies","status","setDdSearchStatus","type","setDdSearchCharacterType","location","origin","episodesList","id","Characters","URL","useSelector","characters","setUrl","setResults","currentPage","setCurrentPage","lastPage","setLastPage","errMessage","setErrMessage","txtSearchCharacterName","setTxtSearchCharacterName","ddSearchSpecies","ddSearchCharacterType","ddSearchStatus","ddSearchGender","useEffect","undefined","searchCharacters","buildURL","searchString","replace","getResults","fetch","then","response","json","data","error","info","pages","episodesArray","episode","j","k","substr","lastIndexOf","Object","assign","catch","err","Alert","color","Row","FormGroup","Input","placeholder","onChange","target","selected","Button","size","Container","Col","includes","slice","buildNextPage","Location","setDdSearchLocationType","dimension","setDdSearchDimension","residentsList","Locations","locations","txtSearchLocationName","setTxtSearchLocationName","ddSearchLocationType","ddSearchDimension","searchLocations","residentsArray","residents","Episode","air_date","charactersList","Episodes","episodes","txtSearchEpisodeName","setTxtSearchEpisodeName","txtEpisode","setTxtEpisode","charactersArray","App","dispatch","useDispatch","isOpen","setIsOpen","activeTab","setActiveTab","errBuildCharacterLookups","setErrBuildCharacterLookups","errBuildLocationLookups","setErrBuildLocationLookups","errBuildEpisodeLookups","setErrBuildEpisodeLookups","toggleTab","tab","lastPageOfCharacterResults","totalNumberOfCharacters","arrCharacters","arrSearchSpecies","arrSearchCharacterTypes","charactersIDList","result","jsonData","indexOf","sort","a","b","loadCharacterLookupArrays","lastPageOfLocationResults","totalNumberOfLocations","arrLocations","arrSearchLocationTypes","arrSearchDimensions","locationIDList","loadLocationLookupArrays","lastPageOfEpisodeResults","totalNumberOfEpisodes","arrEpisodes","episodeIDList","loadEpisodesLookupArrays","Navbar","light","expand","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","Jumbotron","tabs","classnames","active","TabContent","TabPane","tabId","sm","configureStore","charactersReducer","episodesReducer","locationsReducer","Boolean","window","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af3ab0e1.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit';\n\n// const arraySearchSpecies = [];\n// const arraySearchCharacterTypes = [];\n// const arraySearchGender = [\n//   {female: \"Female\"},\n//   {male: \"Male\"},\n//   {genderless: \"Genderless\"},\n//   {unknown: \"Unknown\"}\n//   ];\n// const arraySearchCharacterStatus = [\n//   {alive: \"Alive\"},\n//   {dead: \"Dead\"},\n//   {unknown: \"Unknown\"}\n// ];\n\nconst initialState = {\n  charactersURL: \"https://rickandmortyapi.com/api/character/\",\n  paginationURL: \"?page=\",\n  arrayCharacters: [],\n  arraySearchSpecies: [],\n  arraySearchCharacterTypes: [],\n  arraySearchGender: [ // \"female\", \"male\", \"genderless\", \"unknown\"\n    // {female: \"Female\"},\n    // {male: \"Male\"},\n    // {genderless: \"Genderless\"},\n    // {unknown: \"Unknown\"}\n    {label: \"Female\", value: \"female\"},\n    {label: \"Male\", value: \"male\"},\n    {label: \"Genderless\", value: \"genderless\"},\n    {label: \"Unknown\", value: \"unknown\"}\n  ],\n  arraySearchCharacterStatus: [ // \"alive\", \"dead\", \"unknown\"\n    // {alive: \"Alive\"},\n    // {dead: \"Dead\"},\n    // {unknown: \"Unknown\"}\n    {label: \"Alive\", value: \"alive\"},\n    {label: \"Dead\", value: \"dead\"},\n    {label: \"Unknown\", value: \"unknown\"}\n  ]\n};\n\nconst charactersSlice = createSlice({\n  name: 'characters',\n  initialState,\n  reducers: {\n    loadArrayCharacters: {\n      reducer(state, action) {\n        // console.log(\"charactersSlice.js loadArrayCharacters action.payload\", action.payload);\n        // console.log(\"charactersSlice.js loadArrayCharacters action.payload.length\", action.payload.length);\n\n        for (let i = 0; i < action.payload.length; i++) {\n          // console.log(\"charactersSlice.js loadArrayCharacters action.payload[i]\", action.payload[i]);\n          state.arrayCharacters.push(action.payload[i]);\n        };\n      }\n    },\n    loadArraySearchSpecies: {\n        reducer(state, action) {\n          // console.log(\"charactersSlice.js loadArraySearchSpecies action.payload\", action.payload);\n          // console.log(\"charactersSlice.js loadArraySearchSpecies action.payload.length\", action.payload.length);\n\n          for (let i = 0; i < action.payload.length; i++) {\n            // console.log(\"charactersSlice.js loadArraySearchSpecies action.payload[i]\", action.payload[i]);\n            state.arraySearchSpecies.push(action.payload[i]);\n          };\n        }\n      },\n    loadArraySearchCharacterTypes: {\n        reducer(state, action) {\n          // console.log(\"charactersSlice.js loadArraySearchCharacterTypes action.payload\", action.payload);\n          // console.log(\"charactersSlice.js loadArraySearchCharacterTypes action.payload.length\", action.payload.length);\n\n          for (let i = 0; i < action.payload.length; i++) {\n            // console.log(\"charactersSlice.js loadArraySearchCharacterTypes action.payload[i]\", action.payload[i]);\n            state.arraySearchCharacterTypes.push(action.payload[i]);\n          };\n        }\n      }\n  }\n});\n\nexport const {loadArrayCharacters, loadArraySearchSpecies, loadArraySearchCharacterTypes} = charactersSlice.actions;\n\nexport default charactersSlice.reducer;","import {createSlice} from '@reduxjs/toolkit';\n\nconst initialState = {\n    locationsURL: \"https://rickandmortyapi.com/api/location/\",\n    paginationURL: \"?page=\",\n    arrayLocations: [],\n    arraySearchLocationTypes: [],\n    arraySearchDimensions: []\n};\n\nconst locationsSlice = createSlice({\n  name: 'locations',\n  initialState,\n  reducers: {\n    loadArrayLocations: {\n      reducer(state, action) {\n        // console.log(\"locationsSlice.js loadArrayLocations action.payload\", action.payload);\n        // console.log(\"locationsSlice.js loadArrayLocations action.payload.length\", action.payload.length);\n\n        for (let i = 0; i < action.payload.length; i++) {\n          // console.log(\"locationsSlice.js loadArrayLocations action.payload[i]\", action.payload[i]);\n          state.arrayLocations.push(action.payload[i]);\n        };\n      }\n    },\n    loadArraySearchLocationTypes: {\n        reducer(state, action) {\n          // console.log(\"locationsSlice.js loadArraySearchLocationTypes action.payload\", action.payload);\n          // console.log(\"locationsSlice.js loadArraySearchLocationTypes action.payload.length\", action.payload.length);\n\n          for (let i = 0; i < action.payload.length; i++) {\n            // console.log(\"locationsSlice.js loadArraySearchLocationTypes action.payload[i]\", action.payload[i]);\n            state.arraySearchLocationTypes.push(action.payload[i]);\n          };\n        }\n      },\n    loadArraySearchDimensions: {\n        reducer(state, action) {\n          console.log(\"locationsSlice.js loadArraySearchDimensions action.payload\", action.payload);\n          // console.log(\"locationsSlice.js loadArraySearchDimensions action.payload.length\", action.payload.length);\n\n          for (let i = 0; i < action.payload.length; i++) {\n            // console.log(\"locationsSlice.js loadArraySearchDimensions action.payload[i]\", action.payload[i]);\n            state.arraySearchDimensions.push(action.payload[i]);\n          };\n        }\n      }\n  }\n});\n\nexport const {loadArrayLocations, loadArraySearchLocationTypes, loadArraySearchDimensions} = locationsSlice.actions;\n\nexport default locationsSlice.reducer;","import {createSlice} from '@reduxjs/toolkit';\n\nconst initialState = {\n    episodesURL: \"https://rickandmortyapi.com/api/episode/\",\n    paginationURL: \"?page=\",\n    arrayEpisodes: []\n};\n\nconst episodesSlice = createSlice({\n  name: 'episodes',\n  initialState,\n  reducers: {\n    loadArrayEpisodes: {\n      reducer(state, action) {\n        // console.log(\"episodesSlice.js loadArrayEpisodes action.payload\", action.payload);\n        // console.log(\"episodesSlice.js loadArrayEpisodes action.payload.length\", action.payload.length);\n\n        for (let i = 0; i < action.payload.length; i++) {\n          // console.log(\"episodesSlice.js loadArrayEpisodes action.payload[i]\", action.payload[i]);\n          state.arrayEpisodes.push(action.payload[i]);\n        };\n      }\n    }\n  }\n});\n\nexport const {loadArrayEpisodes} = episodesSlice.actions;\n\nexport default episodesSlice.reducer;","import React, {useState, useEffect} from \"react\";\nimport {Container, Col, Row, Card, CardBody, CardLink} from \"reactstrap\";\n\nconst Character = (props) => {\n\n    console.log(\"Character.js props.results\", props.results);\n    \n    const [modal, setModal] = useState(false);\n\n    const loadDetailsModal = () => {\n        console.log(\"Character.js loadDetailsModal\", loadDetailsModal);\n        setModal(!modal);\n    };\n\n    return (\n        <React.Fragment>\n\n            {props.results.length > 0 ? props.results.map((character) => {\n                        // console.log(\"Character.js results.map character\", character);\n                    return (\n\n                        <Card key={character.id} className=\"m-2 p-2\">\n                            <img src={character.image} alt={character.name} />\n                        <CardBody>\n                            <p><CardLink href={character.url} onClick={loadDetailsModal}>{character.name}</CardLink></p>\n                            <p>Gender: <CardLink href={character.gender} onClick={(event) => {/*console.log(event.target.value);*/ event.preventDefault(); console.log(\"Character.js props.setDdSearchGender(character.gender)\", character.gender); props.setDdSearchGender(character.gender);}}>{character.gender}</CardLink></p>\n                            <p>Species: <CardLink href={character.species} onClick={(event) => {/*console.log(event.target.value);*/ event.preventDefault(); console.log(\"Character.js props.setDdSearchSpecies(character.species)\", character.species); props.setDdSearchSpecies(character.species);}}>{character.species}</CardLink></p>\n                            <p>Status: <CardLink href={character.status} onClick={(event) => {/*console.log(event.target.value);*/ event.preventDefault(); console.log(\"Character.js props.setDdSearchStatus(character.status)\", character.status); props.setDdSearchStatus(character.status);}}>{character.status}</CardLink></p>\n                            <p>Type: <CardLink href={character.type} onClick={(event) => {/*console.log(event.target.value);*/ event.preventDefault(); console.log(\"Character.js props.setDdSearchCharacterType(character.type)\", character.type); props.setDdSearchCharacterType(character.type);}}>{character.type}</CardLink></p>\n                            <p>Location: <CardLink href={character.location.url} onClick={props.loadDetailsModal}>{character.location.name}</CardLink></p>\n                            <p>Origin: <CardLink href={character.origin.url} onClick={props.loadDetailsModal}>{character.origin.name}</CardLink></p>\n\n                            <p>Episode(s): \n                            {/* {character.episode.map((episode, index) => {\n                                console.log(\"Character.js episodes.map episode\", episode);\n                                return ({index})\n                                })} */}\n                                {/* {character.episodesList} */}\n                            </p>\n                            <p><CardLink href={character.episodesList} onClick={props.loadDetailsModal}>All Episode(s):</CardLink></p>\n                        </CardBody>\n                        </Card>\n                    )\n                })\n                    : null}\n\n        </React.Fragment>\n    );\n};\n\nexport default Character;\n","import React, {useState, useEffect} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {Container, Row, Col, FormGroup, Input, Button, Alert} from \"reactstrap\";\nimport Character from \"./Character\"\n\nconst Characters = (props) => {\n\n    // console.log(\"Characters.js props.url\", props.url);\n    // console.log(\"Characters.js props.paginationURL\", props.paginationURL);\n    // console.log(\"Characters.js props.arrayEpisodes\", props.arrayEpisodes);\n    // console.log(\"Characters.js props.arraySearchSpecies\", props.arraySearchSpecies);\n    // console.log(\"Characters.js props.arraySearchCharacterTypes\", props.arraySearchCharacterTypes);\n\n    const URL = useSelector(state => state.characters.charactersURL);\n    const paginationURL = useSelector(state => state.characters.paginationURL);\n    const arraySearchSpecies = useSelector(state => state.characters.arraySearchSpecies);\n    const arraySearchCharacterTypes = useSelector(state => state.characters.arraySearchCharacterTypes);\n    const arraySearchGender = useSelector(state => state.characters.arraySearchGender);\n    const arraySearchCharacterStatus = useSelector(state => state.characters.arraySearchCharacterStatus);\n\n    // Build lookup arrays\n    const [arrayEpisodes, setArrayEpisodes] = useState([]);\n    // const [arraySearchSpecies, setArraySearchSpecies] = useState([]);\n    // const [arraySearchCharacterTypes, setArraySearchCharacterTypes] = useState([]);\n\n    // The setState seems to run too slow to be used to store the url and paging variables for the fetch; use it to keep the state between fetches.\n    const [url, setUrl] = useState(\"\");\n    const [results, setResults] = useState([]);\n    const [currentPage, setCurrentPage] = useState(0);\n    // const [nextPage, setNextPage] = useState(0);\n    const [lastPage, setLastPage] = useState(0);\n    const [errMessage, setErrMessage] = useState(\"\");\n    const [txtSearchCharacterName, setTxtSearchCharacterName] = useState(\"\");\n    const [ddSearchSpecies, setDdSearchSpecies] = useState(\"\");\n    const [ddSearchCharacterType, setDdSearchCharacterType] = useState(\"\");\n    const [ddSearchStatus, setDdSearchStatus] = useState(\"\");\n    const [ddSearchGender, setDdSearchGender] = useState(\"\");\n\n    // useEffect(() => {\n    //     // console.log(\"Characters.js useEffect props.arrayEpisodes\", props.arrayEpisodes);\n    //     setArrayEpisodes(props.arrayEpisodes);\n    // }, [props.arrayEpisodes]);\n\n    // useEffect(() => {\n    //     // console.log(\"Characters.js useEffect props.arraySearchSpecies\", props.arraySearchSpecies);\n    //     setArraySearchSpecies(props.arraySearchSpecies);\n    //     // buildSearchSpeciesLookup();\n    // }, [props.arraySearchSpecies]);\n\n    // useEffect(() => {\n    //     // console.log(\"Characters.js useEffect props.arraySearchCharacterTypes\", props.arraySearchCharacterTypes);\n    //     setArraySearchCharacterTypes(props.arraySearchCharacterTypes);\n    // }, [props.arraySearchCharacterTypes]);\n\n    // useEffect(() => {\n    //     console.log(\"Characters.js useEffect url\", url);\n    // }, [url]);\n\n    // useEffect(() => {\n    //     console.log(\"Characters.js useEffect currentPage\", currentPage);\n    // }, [currentPage]);\n\n    // useEffect(() => {\n    //     console.log(\"Characters.js useEffect nextPage\", nextPage);\n    // }, [nextPage]);\n\n    // useEffect(() => {\n    //     console.log(\"Characters.js useEffect lastPage\", lastPage);\n    // }, [lastPage]);\n\n    // useEffect(() => {\n    //     // console.log(\"Characters.js useEffect results\", results);\n    //     // console.log(\"Characters.js useEffect results.length\", results.length);\n    // }, [results]);\n\n    useEffect(() => {\n        if (ddSearchSpecies !== undefined && ddSearchSpecies !== \"\") {\n            console.log(\"Locations.js useEffect ddSearchSpecies\", ddSearchSpecies);\n            // Runs the search everytime a select is made and then there is no need for the search button except to submit the name text.\n            // Doesn't change the value for the drop down in the form.\n            searchCharacters();\n        };\n    }, [ddSearchSpecies]);\n\n    useEffect(() => {\n        if (ddSearchCharacterType !== undefined && ddSearchCharacterType !== \"\") {\n            console.log(\"Locations.js useEffect ddSearchCharacterType\", ddSearchCharacterType);\n            // Runs the search everytime a select is made and then there is no need for the search button except to submit the name text.\n            // Doesn't change the value for the drop down in the form.\n            searchCharacters();\n        };\n    }, [ddSearchCharacterType]);\n\n    useEffect(() => {\n        if (ddSearchStatus !== undefined && ddSearchStatus !== \"\") {\n            console.log(\"Locations.js useEffect ddSearchStatus\", ddSearchStatus);\n            // Runs the search everytime a select is made and then there is no need for the search button except to submit the name text.\n            // Doesn't change the value for the drop down in the form.\n            searchCharacters();\n        };\n    }, [ddSearchStatus]);\n\n    useEffect(() => {\n        if (ddSearchGender !== undefined && ddSearchGender !== \"\") {\n            console.log(\"Locations.js useEffect ddSearchGender\", ddSearchGender);\n            // Runs the search everytime a select is made and then there is no need for the search button except to submit the name text.\n            // Doesn't change the value for the drop down in the form.\n            searchCharacters();\n        };\n    }, [ddSearchGender]);\n\n    const searchCharacters = () => {\n        // Only run the first time the form is submitted\n        // let buildURL = props.url;\n        let buildURL = URL;\n        let searchString = \"\";\n      \n        if (txtSearchCharacterName !== undefined) {\n            if (txtSearchCharacterName.length > 0) {\n                searchString += \"&name=\" + txtSearchCharacterName.replace(\" \", \"%20\");\n            };\n        };\n      \n        if (ddSearchStatus !== undefined) {\n          if (ddSearchStatus !== \"\") {\n            searchString += \"&status=\" + ddSearchStatus.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (ddSearchSpecies !== undefined) {\n          if (ddSearchSpecies !== \"\") {\n            searchString += \"&species=\" + ddSearchSpecies.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (ddSearchCharacterType !== undefined) {\n          if (ddSearchCharacterType !== \"\") {\n            searchString += \"&type=\" + ddSearchCharacterType.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (ddSearchGender !== undefined) {\n          if (ddSearchGender !== \"\") {\n            searchString += \"&gender=\" + ddSearchGender.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (searchString !== \"\") {\n            // console.log(\"Characters.js searchCharacters searchString\", searchString);\n            buildURL += \"?\" + searchString;\n        };\n      \n        // console.log(\"Characters.js searchCharacters buildURL\", buildURL);\n\n        setUrl(buildURL);\n      \n        // getResults();\n        getResults(buildURL);\n        \n    };\n\n    // const getResults = () => {\n    //     fetch(url)\n    const getResults = (buildURL) => {\n        // console.log(\"Characters.js getResults buildURL\", buildURL);\n\n        fetch(buildURL)\n        .then(response => {\n            console.log(\"Characters.js searchCharacters response\", response);\n            // if (!response.ok) {\n                // throw Error(response.status + \" \" + response.statusText + \" \" + response.url);\n            // } else {\n                // if (response.status === 200) {\n                    return response.json();\n                // } else {\n                //     return response.status;\n                // };\n            // };\n        })\n        .then(data => {\n            // console.log(\"Characters.js searchCharacters data\", data);\n\n            if (data.error !== undefined) {\n                console.log(\"Characters.js searchCharacters data.error\", data.error);\n                setErrMessage(data.error);\n            } else {\n\n                setLastPage(data.info.pages);\n\n                for (let i = 0; i < data.results.length; i++) {\n                    // console.log(\"Characters.js searchCharacters data.results[i].residents\", data.results[i].residents);\n                    let episodesList = \"\";\n                    let episodesArray = data.results[i].episode;\n\n                    for (let j = 0; j < episodesArray.length; j++) {\n                        // console.log(\"Characters.js searchCharacters episodesArray[j]\", episodesArray[j]);\n                        for (let k = 0; k < arrayEpisodes.length; k++) {\n                            // console.log(\"Characters.js searchCharacters arrayEpisodes[k]\", arrayEpisodes[k]);\n                            if (episodesArray[j].substr(episodesArray[j].lastIndexOf(\"/\") + 1) == arrayEpisodes[k].id) {\n                              // console.log(\"Characters.js searchCharacters character name\", arrayEpisodes[k].name, \"it's a match\");\n\n                              break;\n                            };\n                          };\n\n                          episodesList += episodesArray[j].substr(episodesArray[j].lastIndexOf(\"/\") + 1);\n                          if (j < episodesArray.length - 1) {\n                            episodesList += \",\";\n                          };\n                    };\n\n                    // console.log(\"Characters.js searchCharacters episodesList\", episodesList);\n                    Object.assign(data.results[i], {episodesList: episodesList});\n\n                };\n\n                setResults(data.results);\n                setCurrentPage(currentPage + 1);\n            };\n        })\n        .catch(err => {\n            console.log(\"Characters.js searchCharacters err\", err);\n            setErrMessage(err);\n        });\n\n    };\n\n    const getMoreResults = () => {\n        // console.log(\"Characters.js getMoreResults\");\n\n        // Clears the current results\n        // Shouldn't clear the results but add on to them\n        setResults([]);\n\n        let buildURL = url;\n\n        // Removes ?page=# to the URL\n        if (url.includes(paginationURL)) {\n            // console.log(URL);\n            // setUrl(url.slice(0, -7));\n            buildURL = url.slice(0, -7);\n        };\n\n        // setNextPage(currentPage + 1);\n        let buildNextPage = currentPage + 1;\n\n        // Search Pagination\n        setUrl(buildURL + paginationURL + buildNextPage);\n        buildURL = buildURL + paginationURL + buildNextPage;\n        // console.log(\"Characters.js getMoreResults buildURL\", buildURL);\n\n        getResults(buildURL);\n\n    };\n\n    return (\n        <React.Fragment>\n                {errMessage !== \"\" ? <Alert color=\"danger\">{errMessage}</Alert> : null}\n                {url !== \"\" ? <Alert color=\"primary\">{url}</Alert> : null}\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                <Input type=\"text\" id=\"txtSearchCharacterName\" placeholder=\"Name\" onChange={(event) => {/*console.log(event.target.value);*/ setTxtSearchCharacterName(event.target.value);}} />\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchSpecies\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchSpecies(event.target.value);}}>\n                    <option value=\"\">Select Species</option>\n                    {arraySearchSpecies.length > 0 ? arraySearchSpecies.map((species) => {\n                        // console.log(\"Characters.js arraySearchSpecies.map species\", species);\n                    return (\n                        <option key={species} value={species}>{species}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchCharacterType\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchCharacterType(event.target.value);}}>\n                    <option selected value=\"\">Select Type</option>\n                    {arraySearchCharacterTypes.length > 0 ? arraySearchCharacterTypes.map((type) => {\n                        // console.log(\"Characters.js arraySearchCharacterTypes.map type\", type);\n                    return (\n                        <option key={type} value={type}>{type}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchStatus\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchStatus(event.target.value);}}>\n                    <option selected value=\"\">Select Status</option>\n                    {/* <option value=\"alive\">Alive</option>\n                    <option value=\"dead\">Dead</option>\n                    <option value=\"unknown\">Unknown</option> */}\n                    {arraySearchCharacterStatus.length > 0 ? arraySearchCharacterStatus.map((status) => {\n                        // console.log(\"Characters.js arraySearchCharacterStatus.map status\", status);\n                    return (\n                        <option key={status.value} value={status.value}>{status.label}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchGender\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchGender(event.target.value);}}>\n                    <option selected value=\"\">Select Gender</option>\n                    {/* <option value=\"female\">Female</option>\n                    <option value=\"male\">Male</option>\n                    <option value=\"genderless\">Genderless</option>\n                    <option value=\"unknown\">Unknown</option> */}\n                    {arraySearchGender.length > 0 ? arraySearchGender.map((gender) => {\n                        // console.log(\"Characters.js arraySearchGender.map gender\", gender);\n                    return (\n                        <option key={gender.value} value={gender.value}>{gender.label}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                </Row>\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                    <Button id=\"btnSearchCharacters\" color=\"primary\" size=\"lg\" className=\"ml-4 m-2 p-2\" onClick={searchCharacters}>Search Characters</Button>\n                </FormGroup>\n                </Row>\n                {results.length > 0 ?\n                <Row className=\"m-2\">\n                    <Container>\n                        <Row className=\"justify-content-center\">\n                            <Character results={results} setDdSearchSpecies={setDdSearchSpecies} setDdSearchCharacterType={setDdSearchCharacterType} setDdSearchStatus={setDdSearchStatus} setDdSearchGender={setDdSearchGender} />\n                        </Row>\n                        {currentPage < lastPage ?\n                        <Row className=\"justify-content-end p-4\">\n                            <Col className=\"text-right\">\n                            <a href=\"#\" onClick={getMoreResults}>more</a>\n                            </Col>\n                        </Row>\n                        : null}\n                    </Container>\n                </Row>\n                : null}\n        </React.Fragment>\n    );\n};\n\nexport default Characters;","import React, {useState, useEffect} from \"react\";\nimport {Container, Col, Row, Card, CardBody, CardLink} from \"reactstrap\";\n\nconst Location = (props) => {\n\n    console.log(\"Location.js props.results\", props.results);\n    \n    const [modal, setModal] = useState(false);\n\n    const loadDetailsModal = () => {\n        console.log(\"Location.js loadDetailsModal\", loadDetailsModal);\n        setModal(!modal);\n    };\n\n    return (\n        <React.Fragment>\n\n            {props.results.length > 0 ? props.results.map((location) => {\n                        // console.log(\"Location.js results.map location\", location);\n                    return (\n\n                        <Card key={location.id} className=\"m-2 p-2\">\n                        <CardBody>\n                            <p><CardLink href={location.url} onClick={loadDetailsModal}>{location.name}</CardLink></p>\n                            <p>Type: <CardLink href={location.type} onClick={(event) => {/*console.log(event.target.value);*/ event.preventDefault(); console.log(\"Location.js props.setDdSearchLocationType(location.type)\", location.type); props.setDdSearchLocationType(location.type);}}>{location.type}</CardLink></p>\n                            <p>Dimension: <CardLink href={location.dimension} onClick={(event) => {/*console.log(event.target.value);*/ event.preventDefault(); console.log(\"Location.js props.setDdSearchDimension(location.dimension)\", location.dimension); props.setDdSearchDimension(location.dimension);}}>{location.dimension}</CardLink></p>\n                            <p>Resident(s): \n                            {/* {location.residents.map((resident, index) => {\n                                console.log(\"Location.js residents.map resident\", resident);\n                                return ({index})\n                                })} */}\n                                {/* {location.residentsList} */}\n                            </p>\n                            <p><CardLink href={location.residentsList} onClick={props.loadDetailsModal}>All Resident(s):</CardLink></p>\n                        </CardBody>\n                        </Card>\n                    )\n                })\n                    : null}\n\n            \n        </React.Fragment>\n    );\n};\n\nexport default Location;\n","import React, {useState, useEffect} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {Container, Row, Col, FormGroup, Input, Button, Alert} from \"reactstrap\";\nimport Location from \"./Location\"\n\nconst Locations = (props) => {\n\n    // console.log(\"Locations.js props.url\", props.url);\n    // console.log(\"Locations.js props.paginationURL\", props.paginationURL);\n    // console.log(\"Locations.js props.arrayCharacters\", props.arrayCharacters);\n    // console.log(\"Locations.js props.arraySearchLocationTypes\", props.arraySearchLocationTypes);\n    // console.log(\"Locations.js props.arraySearchDimensions\", props.arraySearchDimensions);\n\n    const URL = useSelector(state => state.locations.locationsURL);\n    const paginationURL = useSelector(state => state.locations.paginationURL);\n    const arrayCharacters = useSelector(state => state.characters.arrayCharacters);\n    const arraySearchLocationTypes = useSelector(state => state.locations.arraySearchLocationTypes);\n    const arraySearchDimensions = useSelector(state => state.locations.arraySearchDimensions);\n\n    // Build lookup arrays\n    // const [arrayCharacters, setArrayCharacters] = useState([]);\n    // const [arraySearchLocationTypes, setArraySearchLocationTypes] = useState([]);\n    // const [arraySearchDimensions, setArraySearchDimensions] = useState([]);\n\n    // The setState seems to run too slow to be used to store the url and paging variables for the fetch; use it to keep the state between fetches.\n    const [url, setUrl] = useState(\"\");\n    const [results, setResults] = useState([]);\n    const [currentPage, setCurrentPage] = useState(0);\n    // const [nextPage, setNextPage] = useState(0);\n    const [lastPage, setLastPage] = useState(0);\n    const [errMessage, setErrMessage] = useState(\"\");\n    const [txtSearchLocationName, setTxtSearchLocationName] = useState(\"\");\n    const [ddSearchLocationType, setDdSearchLocationType] = useState(\"\");\n    const [ddSearchDimension, setDdSearchDimension] = useState(\"\");\n\n    // useEffect(() => {\n    //     // console.log(\"Locations.js useEffect props.arrayCharacters\", props.arrayCharacters);\n    //     setArrayCharacters(props.arrayCharacters);\n    // }, [props.arrayCharacters]);\n\n    // useEffect(() => {\n    //     // console.log(\"Locations.js useEffect props.arraySearchLocationTypes\", props.arraySearchLocationTypes);\n    //     setArraySearchLocationTypes(props.arraySearchLocationTypes);\n    //     // buildSearchSpeciesLookup();\n    // }, [props.arraySearchLocationTypes]);\n\n    // useEffect(() => {\n    //     // console.log(\"Locations.js useEffect props.arraySearchDimensions\", props.arraySearchDimensions);\n    //     setArraySearchDimensions(props.arraySearchDimensions);\n    // }, [props.arraySearchDimensions]);\n\n    // useEffect(() => {\n    //     console.log(\"Locations.js useEffect props.url\", props.url);\n    // }, [url]);\n\n    // useEffect(() => {\n    //     console.log(\"Locations.js useEffect currentPage\", currentPage);\n    // }, [currentPage]);\n\n    // useEffect(() => {\n    //     console.log(\"Locations.js useEffect nextPage\", nextPage);\n    // }, [nextPage]);\n\n    // useEffect(() => {\n    //     console.log(\"Locations.js useEffect lastPage\", lastPage);\n    // }, [lastPage]);\n\n    // useEffect(() => {\n    //     // console.log(\"Locations.js useEffect results\", results);\n    //     // console.log(\"Locations.js useEffect results.length\", results.length);\n    // }, [results]);\n\n    useEffect(() => {\n        if (ddSearchLocationType !== undefined && ddSearchLocationType !== \"\") {\n            console.log(\"Locations.js useEffect ddSearchLocationType\", ddSearchLocationType);\n            // Runs the search everytime a select is made and then there is no need for the search button except to submit the name text.\n            // Doesn't change the value for the drop down in the form.\n            searchLocations();\n        };\n    }, [ddSearchLocationType]);\n\n    useEffect(() => {\n        if (ddSearchDimension !== undefined && ddSearchDimension !== \"\") {\n            console.log(\"Locations.js useEffect ddSearchDimension\", ddSearchDimension);\n            // Runs the search everytime a select is made and then there is no need for the search button except to submit the name text.\n            // Doesn't change the value for the drop down in the form.\n            searchLocations();\n        };\n    }, [ddSearchDimension]);\n\n    const searchLocations = () => {\n        // Only run the first time the form is submitted\n        // let buildURL = props.url;\n        let buildURL = URL;\n        let searchString = \"\";\n      \n        if (txtSearchLocationName !== undefined) {\n            if (txtSearchLocationName.length > 0) {\n                searchString += \"&name=\" + txtSearchLocationName.replace(\" \", \"%20\");\n            };\n        };\n      \n        if (ddSearchLocationType !== undefined) {\n          if (ddSearchLocationType !== \"\") {\n            searchString += \"&type=\" + ddSearchLocationType.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (ddSearchDimension !== undefined) {\n          if (ddSearchDimension !== \"\") {\n            searchString += \"&dimension=\" + ddSearchDimension.replace(\" \", \"%20\");\n          };\n        };\n      \n        if (searchString !== \"\") {\n            // console.log(\"Locations.js searchLocations searchString\", searchString);\n            buildURL += \"?\" + searchString;\n        };\n      \n        // console.log(\"Locations.js searchLocations buildURL\", buildURL);\n\n        setUrl(buildURL);\n      \n        // getResults();\n        getResults(buildURL);\n\n    };\n\n    // const getResults = () => {\n    //     fetch(url)\n    const getResults = (buildURL) => {\n        // console.log(\"Locations.js getResults buildURL\", buildURL);\n\n        fetch(buildURL)\n        .then(response => {\n            // console.log(\"Locations.js searchLocations response\", response);\n            // if (!response.ok) {\n                // throw Error(response.status + \" \" + response.statusText + \" \" + response.url);\n            // } else {\n                // if (response.status === 200) {\n                    return response.json();\n                // } else {\n                //     return response.status;\n                // };\n            // };\n        })\n        .then(data => {\n            // console.log(\"Locations.js searchLocations data\", data);\n\n            if (data.error !== undefined) {\n                console.log(\"Locations.js searchLocations data.error\", data.error);\n                setErrMessage(data.error);\n            } else {\n\n                setLastPage(data.info.pages);\n\n                for (let i = 0; i < data.results.length; i++) {\n                    // console.log(\"Locations.js searchLocations data.results[i].residents\", data.results[i].residents);\n                    let residentsList = \"\";\n                    let residentsArray = data.results[i].residents;\n\n                    for (let j = 0; j < residentsArray.length; j++) {\n                        // console.log(\"Locations.js searchLocations residentsArray[j]\", residentsArray[j]);\n                        for (let k = 0; k < arrayCharacters.length; k++) {\n                            // console.log(\"Locations.js searchLocations arrayCharacters[k]\", arrayCharacters[k]);\n                            if (residentsArray[j].substr(residentsArray[j].lastIndexOf(\"/\") + 1) == arrayCharacters[k].id) {\n                              // console.log(\"Locations.js searchLocations character name\", arrayCharacters[k].name, \"it's a match\");\n\n                              break;\n                            };\n                          };\n\n                          residentsList += residentsArray[j].substr(residentsArray[j].lastIndexOf(\"/\") + 1);\n                          if (j < residentsArray.length - 1) {\n                            residentsList += \",\";\n                          };\n                    };\n\n                    // console.log(\"Locations.js searchLocations residentsList\", residentsList);\n                    Object.assign(data.results[i], {residentsList: residentsList});\n\n                };\n\n                setResults(data.results);\n                setCurrentPage(currentPage + 1);\n            };\n\n        })\n        .catch(err => {\n            console.log(\"Locations.js searchLocations err\", err);\n            setErrMessage(err);\n        });\n\n    };\n\n    const getMoreResults = () => {\n        // console.log(\"Locations.js getMoreResults\");\n\n        // Clears the current results\n        // Shouldn't clear the results but add on to them\n        setResults([]);\n\n        let buildURL = url;\n\n        // Removes ?page=# to the URL\n        if (url.includes(paginationURL)) {\n            // console.log(URL);\n            // setUrl(url.slice(0, -7));\n            buildURL = url.slice(0, -7);\n        };\n\n        // setNextPage(currentPage + 1);\n        let buildNextPage = currentPage + 1;\n\n        // Search Pagination\n        setUrl(buildURL + paginationURL + buildNextPage);\n        buildURL = buildURL + paginationURL + buildNextPage;\n        // console.log(\"Locations.js getMoreResults buildURL\", buildURL);\n\n        getResults(buildURL);\n\n    };\n\n    return (\n        <React.Fragment>\n                {errMessage !== \"\" ? <Alert color=\"danger\">{errMessage}</Alert> : null}\n                {url !== \"\" ? <Alert color=\"primary\">{url}</Alert> : null}\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                <Input type=\"text\" id=\"txtSearchLocationName\" placeholder=\"Name\" onChange={(event) => {/*console.log(event.target.value);*/ setTxtSearchLocationName(event.target.value);}} />\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchLocationType\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchLocationType(event.target.value);}} >\n                    <option selected value=\"\">Select Type</option>\n                    {arraySearchLocationTypes.length > 0 ? arraySearchLocationTypes.map((type) => {\n                        // console.log(\"Locations.js arraySearchLocationTypes.map type\", type);\n                    return (\n                        <option key={type} value={type}>{type}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                <FormGroup className=\"m-2\">\n                <Input type=\"select\" id=\"ddSearchDimension\" onChange={(event) => {/*console.log(event.target.value);*/ setDdSearchDimension(event.target.value);}} >\n                    <option selected value=\"\">Select Dimension</option>\n                    {arraySearchDimensions.length > 0 ? arraySearchDimensions.map((dimension) => {\n                        // console.log(\"Locations.js arraySearchDimensions.map dimension\", dimension);\n                    return (\n                        <option key={dimension} value={dimension}>{dimension}</option>\n                        )\n                    })\n                    : null}\n                </Input>\n                </FormGroup>\n                </Row>\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                    <Button id=\"btnSearchLocations\" color=\"primary\" size=\"lg\" className=\"ml-4 m-2 p-2\" onClick={searchLocations}>Search Locations</Button>\n                </FormGroup>\n                </Row>\n                {results.length > 0 ?\n                <Row className=\"m-2\">\n                    <Container>\n                        <Row className=\"justify-content-center\">\n                            <Location results={results} setDdSearchLocationType={setDdSearchLocationType} setDdSearchDimension={setDdSearchDimension} />\n                        </Row>\n                        {currentPage < lastPage ?\n                        <Row className=\"justify-content-end p-4\">\n                            <Col className=\"text-right\">\n                            <a href=\"#\" onClick={getMoreResults}>more</a>\n                            </Col>\n                        </Row>\n                        : null}\n                    </Container>\n                </Row>\n                : null}\n        </React.Fragment>\n    );\n};\n\nexport default Locations;","import React, {useState, useEffect} from \"react\";\nimport {Container, Col, Row, Card, CardBody, CardLink} from \"reactstrap\";\n\nconst Episode = (props) => {\n\n    console.log(\"Episode.js props.results\", props.results);\n    \n    const [modal, setModal] = useState(false);\n\n    const loadDetailsModal = () => {\n        console.log(\"Episode.js loadDetailsModal\", loadDetailsModal);\n        setModal(!modal);\n    };\n\n    return (\n        <React.Fragment>\n\n            {props.results.length > 0 ? props.results.map((episode) => {\n                        // console.log(\"Episode.js results.map episode\", episode);\n                    return (\n\n                        <Card key={episode.id} className=\"m-2 p-2\">\n                        <CardBody>\n                            <p><CardLink href={episode.url} onClick={loadDetailsModal}>{episode.name}</CardLink></p>\n                            <p>Episode: {episode.episode}</p>\n                            <p>Air Date: {episode.air_date}</p>\n                            <p>Character(s): \n                            {/* {episode.characters.map((character, index) => {\n                                console.log(\"Episode.js characters.map character\", character);\n                                return ({index})\n                                })} */}\n                                {/* {episode.charactersList} */}\n                            </p>\n                            <p><CardLink href={episode.charactersList} onClick={props.loadDetailsModal}>All Character(s):</CardLink></p>\n                        </CardBody>\n                        </Card>\n                    )\n                })\n                    : null}\n\n        </React.Fragment>\n    );\n};\n\nexport default Episode;\n","import React, {useState, useEffect} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport {Container, Row, Col, FormGroup, Input, Button, Alert} from \"reactstrap\";\nimport Episode from \"./Episode\"\n\nconst Episodes = (props) => {\n\n    // console.log(\"Episodes.js props.url\", props.url);\n    // console.log(\"Episodes.js props.paginationURL\", props.paginationURL);\n    // console.log(\"Episodes.js props.arrayCharacters\", props.arrayCharacters);\n    // console.log(\"Episodes.js props.arrayLocations\", props.arrayLocations);\n\n    const URL = useSelector(state => state.episodes.episodesURL);\n    const paginationURL = useSelector(state => state.episodes.paginationURL);\n    const arrayCharacters = useSelector(state => state.characters.arrayCharacters);\n\n    // Build lookup arrays\n    // const [arrayCharacters, setArrayCharacters] = useState([]);\n\n    // The setState seems to run too slow to be used to store the url and paging variables for the fetch; use it to keep the state between fetches.\n    const [url, setUrl] = useState(\"\");\n    const [results, setResults] = useState([]);\n    const [currentPage, setCurrentPage] = useState(0);\n    // const [nextPage, setNextPage] = useState(0);\n    const [lastPage, setLastPage] = useState(0);\n    const [errMessage, setErrMessage] = useState(\"\");\n    const [txtSearchEpisodeName, setTxtSearchEpisodeName] = useState(\"\");\n    const [txtEpisode, setTxtEpisode] = useState(\"\");\n\n    // useEffect(() => {\n    //     // console.log(\"Episodes.js useEffect props.arrayCharacters\", props.arrayCharacters);\n    //     setArrayCharacters(props.arrayCharacters);\n    // }, [props.arrayCharacters]);\n\n    // useEffect(() => {\n    //     console.log(\"Episodes.js useEffect props.url\", props.url);\n    // }, [url]);\n\n    // useEffect(() => {\n    //     console.log(\"Episodes.js useEffect currentPage\", currentPage);\n    // }, [currentPage]);\n\n    // useEffect(() => {\n    //     console.log(\"Episodes.js useEffect nextPage\", nextPage);\n    // }, [nextPage]);\n\n    // useEffect(() => {\n    //     console.log(\"Episodes.js useEffect lastPage\", lastPage);\n    // }, [lastPage]);\n\n    // useEffect(() => {\n    //     // console.log(\"Episodes.js useEffect results\", results);\n    //     // console.log(\"Episodes.js useEffect results.length\", results.length);\n    // }, [results]);\n\n    const searchEpisodes = () => {\n        // Only run the first time the form is submitted\n        // let buildURL = props.url;\n        let buildURL = URL;\n        let searchString = \"\";\n      \n        if (txtSearchEpisodeName !== undefined) {\n            if (txtSearchEpisodeName.length > 0) {\n                searchString += \"&name=\" + txtSearchEpisodeName.replace(\" \", \"%20\");\n            };\n        };\n      \n        if (txtEpisode !== undefined) {\n            if (txtEpisode.length > 0) {\n                searchString += \"&episode=\" + txtEpisode.replace(\" \", \"%20\");\n            };\n        };\n      \n        if (searchString !== \"\") {\n            // console.log(\"Episodes.js searchEpisodes searchString\", searchString);\n            buildURL += \"?\" + searchString;\n        };\n      \n        // console.log(\"Episodes.js searchEpisodes buildURL\", buildURL);\n\n        setUrl(buildURL);\n      \n        // getResults();\n        getResults(buildURL);\n\n    };\n\n    // const getResults = () => {\n    //     fetch(url)\n    const getResults = (buildURL) => {\n        // console.log(\"Episodes.js getResults buildURL\", buildURL);\n\n        fetch(buildURL)\n        .then(response => {\n            // console.log(\"Episodes.js getResults response\", response);\n            // if (!response.ok) {\n                // throw Error(response.status + \" \" + response.statusText + \" \" + response.url);\n            // } else {\n                // if (response.status === 200) {\n                    return response.json();\n                // } else {\n                //     return response.status;\n                // };\n            // };\n        })\n        .then(data => {\n            // console.log(\"Episodes.js getResults data\", data);\n\n            if (data.error !== undefined) {\n                console.log(\"Episodes.js getResults data.error\", data.error);\n                setErrMessage(data.error);\n            } else {\n\n                setLastPage(data.info.pages);\n\n                for (let i = 0; i < data.results.length; i++) {\n                    // console.log(\"Episodes.js getResults data.results[i].residents\", data.results[i].residents);\n                    let charactersList = \"\";\n                    let charactersArray = data.results[i].characters;\n\n                    for (let j = 0; j < charactersArray.length; j++) {\n                        // console.log(\"Episodes.js getResults charactersArray[j]\", charactersArray[j]);\n                        for (let k = 0; k < arrayCharacters.length; k++) {\n                            // console.log(\"Episodes.js getResults arrayCharacters[k]\", arrayCharacters[k]);\n                            if (charactersArray[j].substr(charactersArray[j].lastIndexOf(\"/\") + 1) == arrayCharacters[k].id) {\n                              // console.log(\"Episodes.js getResults character name\", arrayCharacters[k].name, \"it's a match\");\n\n                              break;\n                            };\n                          };\n\n                          charactersList += charactersArray[j].substr(charactersArray[j].lastIndexOf(\"/\") + 1);\n                          if (j < charactersArray.length - 1) {\n                            charactersList += \",\";\n                          };\n                    };\n\n                    // console.log(\"Episodes.js getResults charactersList\", charactersList);\n                    Object.assign(data.results[i], {charactersList: charactersList});\n\n                };\n\n                setResults(data.results);\n                setCurrentPage(currentPage + 1);\n            };\n        })\n        .catch(err => {\n            console.log(\"Episodes.js getResults err\", err);\n            setErrMessage(err);\n        });\n\n    };\n\n    const getMoreResults = () => {\n        // console.log(\"Episodes.js getMoreResults\");\n\n        // Clears the current results\n        // Shouldn't clear the results but add on to them\n        setResults([]);\n\n        let buildURL = url;\n\n        // Removes ?page=# to the URL\n        if (url.includes(paginationURL)) {\n            // console.log(URL);\n            // setUrl(url.slice(0, -7));\n            buildURL = url.slice(0, -7);\n        };\n\n        // setNextPage(currentPage + 1);\n        let buildNextPage = currentPage + 1;\n\n        // Search Pagination\n        setUrl(buildURL + paginationURL + buildNextPage);\n        buildURL = buildURL + paginationURL + buildNextPage;\n        // console.log(\"Episodes.js getMoreResults buildURL\", buildURL);\n\n        getResults(buildURL);\n\n    };\n\n    return (\n        <React.Fragment>\n                {errMessage !== \"\" ? <Alert color=\"danger\">{errMessage}</Alert> : null}\n                {url !== \"\" ? <Alert color=\"primary\">{url}</Alert> : null}\n                <Row className=\"m-2\">\n                    <FormGroup className=\"m-2\">\n                    <Input type=\"text\" id=\"txtSearchEpisodeName\" placeholder=\"Name\" onChange={(event) => {/*console.log(event.target.value);*/ setTxtSearchEpisodeName(event.target.value);}} />\n                    </FormGroup>\n                    <FormGroup className=\"m-2\">\n                    <Input type=\"text\" id=\"txtEpisode\" placeholder=\"Episode\" onChange={(event) => {/*console.log(event.target.value);*/ setTxtEpisode(event.target.value);}} />\n                    </FormGroup>\n                </Row>\n                <Row className=\"m-2\">\n                <FormGroup className=\"m-2\">\n                    <Button id=\"btnSearchEpisodes\" color=\"primary\" size=\"lg\" className=\"ml-4 m-2 p-2\" onClick={searchEpisodes}>Search Episodes</Button>\n                </FormGroup>\n                </Row>\n                {results.length > 0 ?\n                <Row className=\"m-2\">\n                    <Container>\n                        <Row className=\"justify-content-center\">\n                            <Episode results={results} />\n                        </Row>\n                        {currentPage < lastPage ?\n                        <Row className=\"justify-content-end p-4\">\n                            <Col className=\"text-right\">\n                            <a href=\"#\" onClick={getMoreResults}>more</a>\n                            </Col>\n                        </Row>\n                        : null}\n                    </Container>\n                </Row>\n                : null}\n        </React.Fragment>\n    );\n};\n\nexport default Episodes;","import React, {useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./App.css\";\r\nimport {Container, Col, Row, Navbar, NavbarBrand, NavbarToggler, Collapse, Nav, NavItem, NavLink, Jumbotron, TabContent, TabPane, Alert} from \"reactstrap\";\r\nimport {loadArrayCharacters, loadArraySearchSpecies, loadArraySearchCharacterTypes} from \"./components/characters/charactersSlice\";\r\n// import {addSpecies} from \"./components/characters/speciesSlice\";\r\n// import {addCharacterTypes} from \"./components/characters/characterTypesSlice\";\r\nimport {loadArrayLocations, loadArraySearchLocationTypes, loadArraySearchDimensions} from \"./components/locations/locationsSlice\";\r\nimport {loadArrayEpisodes} from \"./components/episodes/episodesSlice\";\r\nimport classnames from \"classnames\";\r\nimport Characters from \"./components/characters/Characters\";\r\nimport Locations from \"./components/locations/Locations\";\r\nimport Episodes from \"./components/episodes/Episodes\";\r\n\r\nfunction App() {\r\n\r\n  // const baseURL = \"https://rickandmortyapi.com/api/\";\r\n  // const charactersURL = \"https://rickandmortyapi.com/api/character/\";\r\n  // const locationsURL = \"https://rickandmortyapi.com/api/location/\";\r\n  // const episodesURL = \"https://rickandmortyapi.com/api/episode/\";\r\n  // const paginationURL = \"?page=\"\r\n  const charactersURL = useSelector(state => state.characters.charactersURL);\r\n  const locationsURL = useSelector(state => state.locations.locationsURL);\r\n  const episodesURL = useSelector(state => state.episodes.episodesURL);\r\n  const paginationURL = useSelector(state => state.characters.paginationURL);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [activeTab, setActiveTab] = useState(\"0\");\r\n  const [errBuildCharacterLookups, setErrBuildCharacterLookups] = useState(\"\");\r\n  const [errBuildLocationLookups, setErrBuildLocationLookups] = useState(\"\");\r\n  const [errBuildEpisodeLookups, setErrBuildEpisodeLookups] = useState(\"\");\r\n\r\n  // Build lookup arrays\r\n  // const [arrayCharacters, setArrayCharacters] = useState([]);\r\n  // const [arrayLocations, setArrayLocations] = useState([]);\r\n  // const [arrayEpisodes, setArrayEpisodes] = useState([]);\r\n\r\n  // const [arraySearchSpecies, setArraySearchSpecies] = useState([]);\r\n  // const [arraySearchCharacterTypes, setArraySearchCharacterTypes] = useState([]);\r\n  // const [arraySearchLocationTypes, setArraySearchLocationTypes] = useState([]);\r\n  // const [arraySearchDimensions, setArraySearchDimensions] = useState([]);\r\n\r\n  const toggleMenu = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const toggleTab = (tab) => {\r\n    if (activeTab !== tab) {\r\n      setActiveTab(tab);\r\n    };\r\n  };\r\n\r\n  const loadCharacterLookupArrays = () => {\r\n\r\n    // Build lookup arrays\r\n    let arrCharacters = [];\r\n\r\n    let arrSearchSpecies = [];\r\n    let arrSearchCharacterTypes = [];\r\n  \r\n    // Create characters URL of all possible character IDs?\r\n    // Fetch that and read results\r\n    // current total number of characters + to get the correct index value(?)\r\n    // used a number higher than the current total number of characters and it worked\r\n\r\n    let lastPageOfCharacterResults;\r\n    let totalNumberOfCharacters; // = 700 + 1; // Just over the hishest character id on 09/04/2020\r\n    let charactersIDList = \"\";\r\n\r\n    fetch(charactersURL)\r\n    .then(result => {\r\n        // console.log(result);\r\n        return result.json();\r\n    })\r\n    .then(jsonData => {\r\n      // console.log(jsonData);\r\n      // Assumes that the highest character id = record count\r\n      // totalNumberOfCharacters = jsonData.info.count; // + 1; to account for the index of the array starting at zero -- Not needed\r\n      // console.log(\"totalNumberOfCharacters\", totalNumberOfCharacters);\r\n      lastPageOfCharacterResults = charactersURL + paginationURL + jsonData.info.pages;\r\n      // console.log(\"lastPageOfCharacterResults\", lastPageOfCharacterResults);\r\n\r\n      return fetch(lastPageOfCharacterResults);\r\n    })\r\n    .then(result => {\r\n        // console.log(result);\r\n        return result.json();\r\n    })\r\n    .then(jsonData => {\r\n      // console.log(jsonData);\r\n      let results = jsonData.results;\r\n      // console.log(results);\r\n\r\n      // console.log(\"results.length\", results.length);\r\n      totalNumberOfCharacters = results[results.length - 1].id;\r\n      // console.log(\"totalNumberOfCharacters\", totalNumberOfCharacters);\r\n\r\n      for (let i = 1; i < totalNumberOfCharacters; i++) {\r\n        charactersIDList += i;\r\n          if (i < totalNumberOfCharacters - 1) {\r\n            charactersIDList += \",\";\r\n          };\r\n      };\r\n      \r\n      // console.log(\"charactersIDList\", charactersIDList);\r\n      // console.log(\"charactersURL\", charactersURL + charactersIDList);\r\n\r\n      // From https://gomakethings.com/how-to-use-the-fetch-method-to-make-multiple-api-calls-with-vanilla-javascript/\r\n      return fetch(charactersURL + charactersIDList);\r\n    })\r\n    .then(result => {\r\n        // console.log(result);\r\n        return result.json();\r\n    })\r\n    .then(jsonData => {\r\n      // console.log(jsonData);\r\n      let results = jsonData;\r\n      \r\n      // Build lookup arrays\r\n      // https://truetocode.com/check-for-duplicates-in-array-of-javascript-objects/\r\n      for (let i = 0; i < results.length; i++) {\r\n        let arrIDs =  arrCharacters.map((value)=>{return value.id;});\r\n        if (arrIDs.indexOf(results[i].id) === -1) {\r\n          arrCharacters.push({id: results[i].id, name: results[i].name, url: results[i].url});\r\n        };\r\n        // a.findIndex(t=>(t.place === v.place && t.name===v.name))===i) // https://stackoverflow.com/questions/2218999/remove-duplicates-from-an-array-of-objects-in-javascript\r\n        // seen.hasOwnProperty(currentObject.name) // https://stackoverflow.com/questions/30735465/how-can-i-check-if-the-array-of-objects-have-duplicate-property-values\r\n        //if (!arrCharacters.hasOwnProperty(results[i].id)) { // How's this work with an object?\r\n        // if statement isn't working correcly\r\n        //  arrCharacters.push({id: results[i].id, name: results[i].name, url: results[i].url});\r\n        // };\r\n\r\n        // https://www.geeksforgeeks.org/how-to-remove-duplicates-from-an-array-of-objects-using-javascript/\r\n        // copiedarrCharacters = [...arrCharacters];\r\n        // arrCharacters = copiedarrCharacters.filter(function(item, index){\r\n        //   return copiedarrCharacters.indexOf(item) >= index;\r\n        // });\r\n\r\n        // https://dev.to/marinamosti/removing-duplicates-in-an-array-of-objects-in-js-with-sets-3fep\r\n        // let copiedarrCharacters = Array.from(new Set(id.map(a => a.id))).map(id => { return id.find(a => a.id === id) });\r\n        // console.log(copiedarrCharacters);\r\n\r\n        if (results[i].species !== \"\") {\r\n          if (arrSearchSpecies.indexOf(results[i].species) === -1) {\r\n            arrSearchSpecies.push(results[i].species);\r\n          };\r\n        };\r\n        if (results[i].type !== \"\") {\r\n          if (arrSearchCharacterTypes.indexOf(results[i].type) === -1) {\r\n            arrSearchCharacterTypes.push(results[i].type);\r\n          };\r\n        };\r\n    };\r\n\r\n      // Sort the array\r\n      arrSearchSpecies.sort((a, b) => {\r\n        if (a > b) {\r\n            return 1;\r\n        } else {\r\n            return -1;\r\n        };\r\n      });\r\n\r\n      // Sort the array\r\n      arrSearchCharacterTypes.sort((a, b) => {\r\n        if (a > b) {\r\n            return 1;\r\n        } else {\r\n            return -1;\r\n        };\r\n      });\r\n\r\n      // for (let i = 0; i < arrSearchSpecies.length; i++) {\r\n      //   // console.log(\"App.js loadCharacterLookupArrays arrSearchSpecies dispatch\", arrSearchSpecies[i]);\r\n      //   dispatch(addSpecies(arrSearchSpecies[i]));\r\n      // };\r\n\r\n      // for (let i = 0; i < arrSearchCharacterTypes.length; i++) {\r\n      //   // console.log(\"App.js loadCharacterLookupArrays arrSearchCharacterTypes dispatch\", arrSearchCharacterTypes[i]);\r\n      //   dispatch(addCharacterTypes(arrSearchCharacterTypes[i]));\r\n      // };\r\n\r\n      dispatch(loadArrayCharacters(arrCharacters));\r\n\r\n      dispatch(loadArraySearchSpecies(arrSearchSpecies));\r\n\r\n      dispatch(loadArraySearchCharacterTypes(arrSearchCharacterTypes));\r\n\r\n      // for (let i = 0; i < arrSearchSpecies.length; i++) {\r\n      //   console.log(\"App.js loadArraySearchSpecies arrSearchSpecies dispatch\", arrSearchSpecies[i]);\r\n      //   dispatch(loadArraySearchSpecies(arrSearchSpecies[i]));\r\n      // };\r\n\r\n      // for (let i = 0; i < arrSearchCharacterTypes.length; i++) {\r\n      //   console.log(\"App.js loadArraySearchCharacterTypes arrSearchCharacterTypes dispatch\", arrSearchCharacterTypes[i]);\r\n      //   dispatch(loadArraySearchCharacterTypes(arrSearchCharacterTypes[i]));\r\n      // };\r\n\r\n      // View lookup arrays\r\n      // console.log(\"App.js loadCharacterLookupArrays arrCharacters\", arrCharacters);\r\n      // console.log(\"App.js loadCharacterLookupArrays arrSearchSpecies\", arrSearchSpecies);\r\n      // console.log(\"App.js loadCharacterLookupArrays arrSearchCharacterTypes\", arrSearchCharacterTypes);\r\n\r\n    })\r\n    .catch(err => {\r\n      console.log(\"App.js loadCharacterLookupArrays Character Lookups err\", err);\r\n      setErrBuildCharacterLookups(err);\r\n    });\r\n\r\n    // setArrayCharacters(arrCharacters);\r\n  \r\n    // setArraySearchSpecies(arrSearchSpecies);\r\n    // setArraySearchCharacterTypes(arrSearchCharacterTypes);\r\n\r\n  };\r\n\r\n  const loadLocationLookupArrays = () => {\r\n\r\n    // Build lookup arrays\r\n    let arrLocations = [];\r\n\r\n    let arrSearchLocationTypes = [];\r\n    let arrSearchDimensions = [];\r\n\r\n    // Create locations URL of all possible location IDs?\r\n    // Fetch that and read results\r\n    // current total number of locations + to get the correct index value(?)\r\n    // used a number higher than the current total number of locations and it worked\r\n    let lastPageOfLocationResults;\r\n    let totalNumberOfLocations; // = 50 + 1; // Just over the hishest location id on 09/04/2020\r\n    let locationIDList = \"\";\r\n\r\n    fetch(locationsURL)\r\n    .then(result => {\r\n        // console.log(result);\r\n        return result.json();\r\n    })\r\n    .then(jsonData => {\r\n      // console.log(jsonData);\r\n      // Assumes that the highest character id = record count\r\n      // totalNumberOfLocations = jsonData.info.count; // + 1; to account for the index of the array starting at zero -- Not needed\r\n      // console.log(\"totalNumberOfLocations\", totalNumberOfLocations);\r\n      lastPageOfLocationResults = locationsURL + paginationURL + jsonData.info.pages;\r\n      // console.log(\"lastPageOfLocationResults\", lastPageOfLocationResults);\r\n\r\n      return fetch(lastPageOfLocationResults);\r\n    })\r\n    .then(result => {\r\n        // console.log(result);\r\n        return result.json();\r\n    })\r\n    .then(jsonData => {\r\n      // console.log(jsonData);\r\n      let results = jsonData.results;\r\n      // console.log(results);\r\n\r\n      // console.log(\"results.length\", results.length);\r\n      totalNumberOfLocations = results[results.length - 1].id;\r\n      // console.log(\"totalNumberOfLocations\", totalNumberOfLocations);\r\n\r\n      for (let i = 1; i < totalNumberOfLocations; i++) {\r\n        locationIDList += i;\r\n          if (i < totalNumberOfLocations - 1) {\r\n            locationIDList += \",\";\r\n          };\r\n      };\r\n      \r\n      // console.log(\"locationIDList\", locationIDList);\r\n      // console.log(\"locationsURL\", locationsURL + locationIDList);\r\n\r\n      // From https://gomakethings.com/how-to-use-the-fetch-method-to-make-multiple-api-calls-with-vanilla-javascript/\r\n      return fetch(locationsURL + locationIDList);\r\n    })\r\n    .then(result => {\r\n        // console.log(result);\r\n        return result.json();\r\n    })\r\n    .then(jsonData => {\r\n      // console.log(jsonData);\r\n      let results = jsonData;\r\n\r\n      // Build lookup arrays\r\n      for (let i = 0; i < results.length; i++) {\r\n        let arrIDs =  arrLocations.map((value)=>{ return value.id;});\r\n        if (arrIDs.indexOf(results[i].id) === -1) {\r\n          arrLocations.push({id: results[i].id, name: results[i].name, url: results[i].url});\r\n        };\r\n\r\n        if (results[i].type !== \"\") {\r\n          if (arrSearchLocationTypes.indexOf(results[i].type) === -1) {\r\n            arrSearchLocationTypes.push(results[i].type);\r\n          };\r\n        };\r\n        if (results[i].dimension !== \"\") {\r\n          if (arrSearchDimensions.indexOf(results[i].dimension) === -1) {\r\n            arrSearchDimensions.push(results[i].dimension);\r\n          };\r\n        };\r\n      };\r\n\r\n      // Sort the array\r\n      arrSearchLocationTypes.sort((a, b) => {\r\n        if (a > b) {\r\n            return 1;\r\n        } else {\r\n            return -1;\r\n        };\r\n      });\r\n\r\n      // Sort the array\r\n      arrSearchDimensions.sort((a, b) => {\r\n        if (a > b) {\r\n            return 1;\r\n        } else {\r\n            return -1;\r\n        };\r\n      });\r\n\r\n      dispatch(loadArrayLocations(arrLocations));\r\n\r\n      dispatch(loadArraySearchLocationTypes(arrSearchLocationTypes));\r\n\r\n      dispatch(loadArraySearchDimensions(arrSearchDimensions));\r\n\r\n    // View lookup arrays\r\n    // console.log(\"App.js loadLocationLookupArrays arrLocations\", arrLocations);\r\n    // console.log(\"App.js loadLocationLookupArrays arrSearchLocationTypes\", arrSearchLocationTypes);\r\n    // console.log(\"App.js loadLocationLookupArrays arrSearchDimensions\", arrSearchDimensions);\r\n\r\n    })\r\n    .catch(err => {\r\n      console.log(\"App.js loadLocationLookupArrays Location Lookups err\", err);\r\n      setErrBuildLocationLookups(err);\r\n    });\r\n\r\n    // setArrayLocations(arrLocations);\r\n  \r\n    // setArraySearchLocationTypes(arrSearchLocationTypes);\r\n    // setArraySearchDimensions(arrSearchDimensions);\r\n\r\n  };\r\n\r\n  const loadEpisodesLookupArrays = () => {\r\n\r\n    // Build lookup arrays\r\n    let arrEpisodes = [];\r\n\r\n    // Create episode URL of all possible episode IDs?\r\n    // Fetch that and read results\r\n    // current total number of episodes + to get the correct index value(?)\r\n    // used a number higher than the current total number of episodes and it worked\r\n    let lastPageOfEpisodeResults;\r\n    let totalNumberOfEpisodes; // = 50 + 1;// Just over the hishest episode id on 09/04/2020\r\n    let episodeIDList = \"\";\r\n\r\n    fetch(episodesURL)\r\n    .then(result => {\r\n        // console.log(result);\r\n        return result.json();\r\n    })\r\n    .then(jsonData => {\r\n      // console.log(jsonData);\r\n      // Assumes that the highest character id = record count\r\n      // totalNumberOfEpisodes = jsonData.info.count; // + 1; to account for the index of the array starting at zero -- Not needed\r\n      // console.log(\"totalNumberOfEpisodes\", totalNumberOfEpisodes);\r\n      lastPageOfEpisodeResults = locationsURL + paginationURL + jsonData.info.pages;\r\n      // console.log(\"lastPageOfEpisodeResults\", lastPageOfEpisodeResults);\r\n\r\n      return fetch(lastPageOfEpisodeResults);\r\n    })\r\n    .then(result => {\r\n        // console.log(result);\r\n        return result.json();\r\n    })\r\n    .then(jsonData => {\r\n      // console.log(jsonData);\r\n      let results = jsonData.results;\r\n      // console.log(results);\r\n\r\n      // console.log(\"results.length\", results.length);\r\n      totalNumberOfEpisodes = results[results.length - 1].id;\r\n      // console.log(\"totalNumberOfEpisodes\", totalNumberOfEpisodes);\r\n\r\n      for (let i = 1; i < totalNumberOfEpisodes; i++) {\r\n        episodeIDList += i;\r\n          if (i < totalNumberOfEpisodes - 1) {\r\n            episodeIDList += \",\";\r\n          };\r\n      };\r\n      \r\n      // console.log(\"episodeIDList\", episodeIDList);\r\n      // console.log(\"episodesURL\", episodesURL + episodeIDList);\r\n\r\n      // From https://gomakethings.com/how-to-use-the-fetch-method-to-make-multiple-api-calls-with-vanilla-javascript/\r\n      return fetch(episodesURL + episodeIDList);\r\n    })\r\n    .then(result => {\r\n        // console.log(result);\r\n        return result.json();\r\n    })\r\n    .then(jsonData => {\r\n      // console.log(jsonData);\r\n      let results = jsonData;\r\n\r\n      // Build lookup arrays\r\n      for (let i = 0; i < results.length; i++) {\r\n        let arrIDs =  arrEpisodes.map((value)=>{ return value.id;});\r\n        if (arrIDs.indexOf(results[i].id) === -1) {\r\n          arrEpisodes.push({id: results[i].id, name: results[i].name, url: results[i].url});\r\n        };\r\n      };\r\n\r\n      dispatch(loadArrayEpisodes(arrEpisodes));\r\n\r\n      // View lookup arrays\r\n      // console.log(\"App.js loadEpisodesLookupArrays arrEpisodes\", arrEpisodes);\r\n\r\n    })\r\n    .catch(err => {\r\n        console.log(\"App.js loadEpisodesLookupArrays Episode Lookups err\", err);\r\n        setErrBuildEpisodeLookups(err);\r\n    });\r\n\r\n    // setArrayEpisodes(arrEpisodes);\r\n\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadCharacterLookupArrays();\r\n    loadLocationLookupArrays();\r\n    loadEpisodesLookupArrays();\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(\"App.js useEffect arrayCharacters\", arrayCharacters);\r\n  // }, [arrayCharacters]);\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(\"App.js useEffect arrayLocations\", arrayLocations);\r\n  // }, [arrayLocations]);\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(\"App.js useEffect arrayEpisodes\", arrayEpisodes);\r\n  // }, [arrayEpisodes]);\r\n  \r\n  // useEffect(() => {\r\n  //   console.log(\"App.js useEffect arraySearchSpecies\", arraySearchSpecies);\r\n  // }, [arraySearchSpecies]);\r\n  \r\n  // useEffect(() => {\r\n  //   // console.log(\"App.js useEffect arraySearchCharacterTypes\", arraySearchCharacterTypes);\r\n  // }, [arraySearchCharacterTypes]);\r\n  \r\n  // useEffect(() => {\r\n  //   // console.log(\"App.js useEffect arraySearchLocationTypes\", arraySearchLocationTypes);\r\n  // }, [arraySearchLocationTypes]);\r\n  \r\n  // useEffect(() => {\r\n  //   // console.log(\"App.js useEffect arraySearchDimensions\", arraySearchDimensions);\r\n  // }, [arraySearchDimensions]);\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <Navbar color=\"light\" light expand=\"md\">\r\n      <NavbarBrand href=\"#\">Rick and Morty</NavbarBrand>\r\n      <NavbarToggler onClick={toggleMenu} />\r\n      <Collapse isOpen={isOpen} navbar>\r\n      <Nav className=\"mr-auto\" navbar>\r\n        <NavItem>\r\n          <NavLink href=\"https://rickandmortyapi.com\" target=\"_blank\">Rick and Morty API</NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink href=\"https://rickandmortyapi.com/documentation\" target=\"_blank\">Rick and Morty API Documentation</NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink href=\"https://mirfishe.github.io/Rick-and-Morty-API/\" target=\"_blank\">Rick and Morty Version 1</NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink href=\"https://mirfishe.github.io/rick-and-morty-api-react/\" target=\"_blank\">Rick and Morty Version 2</NavLink>\r\n        </NavItem>\r\n        </Nav>\r\n      </Collapse>\r\n    </Navbar>\r\n\r\n    <Jumbotron>\r\n        <h1 className=\"display-3\">Rick and Morty</h1>\r\n    </Jumbotron>\r\n\r\n    {errBuildCharacterLookups !== \"\" ? <Alert color=\"danger\">{errBuildCharacterLookups}</Alert> : null}\r\n    {errBuildLocationLookups !== \"\" ? <Alert color=\"danger\">{errBuildLocationLookups}</Alert> : null}\r\n    {errBuildEpisodeLookups !== \"\" ? <Alert color=\"danger\">{errBuildEpisodeLookups}</Alert> : null}\r\n\r\n    <Nav tabs className=\"m-2\">\r\n      <NavItem>\r\n        <NavLink className={classnames({active: activeTab === \"1\"})} onClick={() => {toggleTab(\"1\");}}>Search Characters</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink className={classnames({active: activeTab === \"2\"})} onClick={() => {toggleTab(\"2\");}}>Search Locations</NavLink>\r\n      </NavItem>\r\n      <NavItem>\r\n        <NavLink className={classnames({active: activeTab === \"3\"})} onClick={() => {toggleTab(\"3\");}}>Search Episodes</NavLink>\r\n      </NavItem>\r\n    </Nav>\r\n    <TabContent activeTab={activeTab}>\r\n      <TabPane tabId=\"1\">\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Characters />\r\n          </Col>\r\n        </Row>\r\n      </TabPane>\r\n      </TabContent>\r\n      <TabContent activeTab={activeTab}>\r\n      <TabPane tabId=\"2\">\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Locations />\r\n          </Col>\r\n        </Row>\r\n      </TabPane>\r\n      </TabContent>\r\n      <TabContent activeTab={activeTab}>\r\n      <TabPane tabId=\"3\">\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <Episodes />\r\n          </Col>\r\n        </Row>\r\n      </TabPane>\r\n    </TabContent>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport charactersReducer from '../components/characters/charactersSlice';\r\n// import speciesReducer from '../components/characters/speciesSlice';\r\n// import characterTypesReducer from '../components/characters/characterTypesSlice';\r\nimport episodesReducer from '../components/episodes/episodesSlice';\r\nimport locationsReducer from '../components/locations/locationsSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    characters: charactersReducer,\r\n    // species: speciesReducer,\r\n    // characterTypes: characterTypesReducer,\r\n    episodes: episodesReducer,\r\n    locations: locationsReducer\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}